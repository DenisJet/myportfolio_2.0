export const projectsEn = [
  {
    id: '9',
    link: '/en/portfolio/todo',
    title: 'My ToDo List',
    descriptionCard: 'Full stack project, task list app.',
    year: 2024,
    iconsSrc: [
      '/icons/icon-typescript.svg',
      '/icons/icon-next.svg',
      '/icons/icons-nest.svg',
      '/icons/icon-mongo.svg',
      '/icons/icon-docker.svg',
    ],
    imageSrc: '/projects/mytodo.png',
    description:
      'The application implements the functionality of adding a new task indicating the title, description and status. It is also possible to change and delete existing tasks. The application is deployed on the server from a Docker container (you can add a couple of tasks for me, but do not rush the server may respond with a delay of a few seconds). This is just the initial state of the project. I plan to develop a convenient and pleasant interface and add a set of cool functions.',
    uses: 'Nest JS, Next JS, MongoDB, TypeScript, Docker',
    addLinks: [
      'http://5.35.89.103:3000/',
      'https://github.com/DenisJet/mytodo-client',
      'https://github.com/DenisJet/mytodo-server',
    ],
  },
  {
    id: '8',
    link: '/en/portfolio/spotify-clone',
    title: 'Spotify-Clone',
    descriptionCard: 'Full stack project, music platform.',
    year: 2023,
    iconsSrc: [
      '/icons/icon-typescript.svg',
      '/icons/icon-next.svg',
      '/icons/icons-nest.svg',
      '/icons/icon-mongo.svg',
      '/icons/icon-mui.svg',
    ],
    imageSrc: '/projects/spotify-clone.png',
    description:
      'Music platform. Implemented loading, listening and deleting music tracks, loading images for the track cover. It is possible to leave comments. The music player is also implemented. The main set of functions has already been implemented. But the project is still under development.',
    uses: 'Nest JS, SSR на Next JS, TypeScript, Mongo DB, Material Ui',
    addLinks: ['https://github.com/DenisJet/spotify-clone-client', 'https://github.com/DenisJet/spotify-clone-server'],
  },
  {
    id: '7',
    link: '/en/portfolio/live-chat',
    title: 'On-Line Chat',
    descriptionCard: 'Live chat.',
    year: 2023,
    iconsSrc: [
      '/icons/icon-typescript.svg',
      '/icons/icons-nest.svg',
      '/icons/icon-postgresql.svg',
      '/icons/socket-icon.svg',
    ],
    imageSrc: '/projects/online-chat.png',
    description: 'A small project, live chat. Created to get acquainted with WebSocket.',
    uses: 'Nest JS, PostgreSQL, Prisma, Socket.IO',
    addLinks: ['https://online-chat-c8eu.onrender.com/chat', 'https://github.com/DenisJet/live-chat-server'],
  },
  {
    id: '6',
    link: '/en/portfolio/my-top',
    title: 'My Top',
    descriptionCard: 'Full stack learning project. Service for rating courses, services, books...',
    year: 2023,
    iconsSrc: [
      '/icons/icon-typescript.svg',
      '/icons/icon-next.svg',
      '/icons/icons-nest.svg',
      '/icons/icon-mongo.svg',
      '/icons/icon-docker.svg',
    ],
    imageSrc: '/projects/mytop.png',
    description:
      'One of my learning projects. Rating of courses, services, books, etc. Using NestJS and MongoDB, an api for creating, deleting, editing, and searching pages and products has been implemented. Telegram bot has been integrated using telegraf. Registration and authorization using passport-jwt are also implemented. Implemented SSR on NextJS. There is dynamic routing, working with React Hook Form, some animation using Frame Motion. Working with Github Actions, Docker and much more...',
    uses: 'Nest JS, MongoDB, telegraf, passport-jwt, NextJS, React Hook Form, Github Actions, Docker',
    addLinks: ['https://github.com/DenisJet/mytop-app', 'https://github.com/DenisJet/mytop-api'],
  },
  {
    id: '5',
    link: '/en/portfolio/github-search',
    title: 'Github Search',
    descriptionCard: 'Service for searching repositories on Github by username.',
    year: 2023,
    iconsSrc: [
      '/icons/icon-typescript.svg',
      '/icons/react_icon.svg',
      '/icons/icon-redux.svg',
      '/icons/icon-tailwind.svg',
      '/icons/axios_icon.svg',
    ],
    imageSrc: '/projects/githubsearch.png',
    description:
      'Not a big application, allows you to find repositories on Github by user name. The function of adding and removing repository from favorites is implemented.',
    uses: 'TypeScript, React, RTKQuery, Tailwind CSS, Axios',
    addLinks: ['https://denisjet-githubsearch.netlify.app/', 'https://github.com/DenisJet/github-search'],
  },
  {
    id: '4',
    link: '/en/portfolio/blog-me',
    title: 'Blog Me',
    descriptionCard: 'Full stack learning project. Blog, with the ability to write articles.',
    year: 2023,
    iconsSrc: [
      '/icons/icon-javascript.svg',
      '/icons/react_icon.svg',
      '/icons/icon-redux.svg',
      '/icons/icon-mui.svg',
      '/icons/icon-express.svg',
      '/icons/icon-mongo.svg',
      '/icons/axios_icon.svg',
    ],
    imageSrc: '/projects/blog-me.png',
    description:
      'My first full stack learning project, during the writing of which I learned how to create my own backend. The project implements user registration and authorization, reading, creating, deleting, changing articles, uploading images to the server, possibility to leave comments, etc.',
    uses: 'MongoDB, Express, React, Material Ui, Redux Toolkit, Axios, JWT, BCrypt, Multer',
    addLinks: ['https://github.com/DenisJet/blog-mern-front', 'https://github.com/DenisJet/blog-mern-beck'],
  },
  {
    id: '3',
    link: '/en/portfolio/baths-restoration',
    title: 'Baths restoration',
    descriptionCard: 'Landing page with semantic, adaptive layout, using tools such as Gulp, Pug, Bootstrap.',
    year: 2023,
    iconsSrc: [
      '/icons/iconhtml.svg',
      '/icons/iconcss.svg',
      '/icons/icon-javascript.svg',
      '/icons/icons-gulp.png',
      '/icons/pug_icon.svg',
      '/icons/icon-bootstrap.svg',
    ],
    imageSrc: '/projects/restoration.png',
    description:
      'A simple landing page, during the creation of which I became acquainted with the Pug template engine, which I liked for its convenient ability to create separate blocks for layout. I also got acquainted with Bootstrap, which greatly speeds up the layout.',
    uses: 'Html, Css, Pug, Bootstrap',
    addLinks: ['https://restavracia--vann.ru/', 'https://github.com/DenisJet/remont-vann'],
  },
  {
    id: '2',
    link: '/en/portfolio/cleanhouse',
    title: 'Clean House',
    descriptionCard: 'Semantic, valid, adaptive, fluid, cross-browser website layout for the Clean House company.',
    year: 2023,
    iconsSrc: [
      '/icons/iconhtml.svg',
      '/icons/iconcss.svg',
      '/icons/icon-javascript.svg',
      '/icons/iconsass.svg',
      '/icons/icons-gulp.png',
    ],
    imageSrc: '/projects/cleanhouse.png',
    description:
      'Insect extermination service website. Fully adaptive, semantic, valid, fluid, cross-browser layout. Using methodology BEM, preprocessor SASS-SCSS, task manager Gulp. Implemented sliders using the library SwiperJS. Implemented the ability to send a message about a call back.',
    uses: 'Html, SASS-SCSS, JS, BEM, Gulp, SwiperJS',
    addLinks: ['https://cleanhouse-ses.ru/', 'https://github.com/DenisJet/CleanHouse'],
  },
  {
    id: '1',
    link: '/en/portfolio/krossover',
    title: 'Krossover',
    descriptionCard: 'Оn-line store for selling shoes and clothing.',
    year: 2022,
    iconsSrc: ['/icons/iconhtml.svg', '/icons/iconcss.svg', '/icons/icon-wordpress.svg'],
    imageSrc: '/projects/krossover.png',
    description: 'Оn-line store for selling shoes and clothing online. Created with WordPress.',
    uses: 'WordPress',
    addLinks: ['https://krossover-shoes.ru/'],
  },
];
